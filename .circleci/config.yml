version: 2.1

orbs:
  android: circleci/android@0.2.1

jobs:
  build:
    executor: android/android
    working_directory: ~/code
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Clean
          command: ./gradlew clean

  static_analyzers:
    executor: android/android
    working_directory: ~/code
    steps:
      - checkout
      - run:
          name: androidLint(debug)
          command: ./gradlew lintDebug
          when: always
      - run:
          name: detekt
          command: ./gradlew detekt
          when: always
      - run:
          name: ktlint
          command: ./gradlew ktlint
          when: always
      - store_artifacts:
          path: /home/circleci/code/app/build/reports/detekt/detekt.html
          destination: reports/detekt
      - store_artifacts:
          path: /home/circleci/code/app/build/reports/lint-results-debug.html
          destination: reports/android_lint
      - store_artifacts:
          path: /home/circleci/code/app/build/ktlint.xml
          destination: reports/ktlint

  unit_tests:
    executor: android/android
    working_directory: ~/code
    steps:
      - checkout
      - run:
          name: Unit tests
          command: ./gradlew test
          when: always
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
          destination: tests

  distribution:
    executor: android/android
    working_directory: ~/code
    steps:
      - checkout
      - run:
          name: Distribute
          command: |
            export FIREBASE_TOKEN=$FIREBASE_TOKEN
            ./gradlew assembleDebug appDistributionUploadDebug
          when: always

workflows:
  version: 2
  build-test-and-static_analyzers:
    jobs:
      - build
      - static_analyzers:
          requires:
            - build
      - unit_tests:
          requires:
            - build
      - distribution:
          context: tvshows
          requires:
            - static_analyzers
            - unit_tests